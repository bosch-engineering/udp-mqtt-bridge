name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  EXTENSION: ""

jobs:
  build:
    name: üõ†Ô∏è Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        arch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false

      - name: Set file extension Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo "EXTENSION=.exe" | Out-File -FilePath $env:GITHUB_ENV -Append # no need for -Encoding utf8

      - name: Build binary
        run: go build -o "out/udp-mqtt-bridge${{ env.EXTENSION }}" ./main.go

      - name: Copy configs
        if: ${{ matrix.os != 'windows' }}
        run: |
          cp -r configs out/configs
          cp -r LICENSE out/
          cp -r CHANGELOG.md out/
          cp -r README.md out/

      - name: Copy configs
        if: ${{ matrix.os == 'windows' }}
        run: |
          xcopy configs out\configs /E /I /Y
          xcopy LICENSE out /I /Y
          xcopy CHANGELOG.md out /I /Y
          xcopy README.md out /I /Y

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: udp-mqtt-bridge-${{ matrix.os }}-${{ matrix.arch }}
          path: out/

  release:
    name: üöÄ Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

      - name: Download artifacts
        if: ${{ steps.create_release.outputs.release_created }}
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Zip artifacts
        if: ${{ steps.create_release.outputs.release_created }}
        run: |
          find artifacts -mindepth 1 -maxdepth 1 -type d -exec sh -c 'cd {} && zip -r ../$(basename {}).zip * -x .gitkeep' \;
          find artifacts -mindepth 1 -maxdepth 1 -type d -exec rm -rf {} \;

      - name: Upload Release Artifact
        if: ${{ steps.create_release.outputs.release_created }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_release.outputs.tag_name }}
          files: |
            artifacts/*
            README.md
            CHANGELOG.md
            LICENSE
